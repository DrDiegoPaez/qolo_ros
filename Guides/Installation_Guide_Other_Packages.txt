#######################
## Download packages ##
#######################

You can get all packages on the github of LASA. 
Download the Branch_July branch, it also contains packages required to use the realsense camera but you still need to follow the other guide to install NCSDK or Ncappzoo.

#########################
## Install GSL library ##
#########################

process_depth_img package requires the gsl module that you can get with the following command:
sudo apt-get install libgsl0-dev

##################################
## Make config files executable ##
##################################

If you do not do that you will have a "Permission denied" error with catkin_make

sudo chmod +x /home/qolo/catkin_ws/src/ira_laser_tools-kinetic/cfg/laserscan_multi_merger.cfg
sudo chmod +x /home/qolo/catkin_ws/src/ira_laser_tools-kinetic/cfg/laserscan_virtualizer.cfg

###############################
## catkin_make the workspace ##
###############################

cd ~/catkin_ws/
catkin_make

##########################################################################
## Install terminator to have a terminal you can split in sub-terminals ##
##########################################################################

sudo add-apt-repository ppa:gnome-terminator
sudo apt-get update
sudo apt-get install terminator

################################################################
## Install chrony and ntpdate to sync time with the Ridgeback ##
################################################################

sudo apt-get install chrony ntpdate

Modify chrony config:
sudo gedit /etc/chrony.conf

Comment the following line:
pool 2.debian.pool.ntp.org offline iburst

Add the following line:
server 192.168.131.1 iburst

#################
## Install SSH ##
#################

sudo apt-get install openssh-server

Check that ssh is running:
sudo service ssh status

#########################
## Install rgbd_launch ## Already done in Branch_July
#########################

To get the 3D point cloud of the camera, we need to launch movidius with rs_rgbd.launch of realsense2_camera package instead of rs_camera.launch

Modify /home/qolo/catkin_ws/src/ros_intel_movidius_ncs/movidius_ncs_launch/launch/ncs_camera.launch

Comment the code that calls rs_camera.launch and call rs_rgbd instead: 

  <!-- launch realsense camera with the relevant parameters if any -->
  <group if="$(eval camera == 'realsense')">
    <arg name="color_width" default="640" />
    <arg name="color_height" default="480" />

    <!-- To have the 3D point cloud (P-Alex) -->
    <include file="$(find realsense2_camera)/launch/rs_rgbd.launch">
    </include>
    <!--
    <include file="$(find realsense2_camera)/launch/rs_camera.launch">
        <arg name="color_width" value="$(arg color_width)" />
        <arg name="color_height" value="$(arg color_height)" /> 
        <arg name="filters" value="pointcloud" /> 
    </include>
    -->
  </group>

Calling rs_rgbd.launch requires the rgbd_launch package.
Clone the jade branch of rgbd_launch and put the package in catkin_ws/src:
git clone -b jade-devel https://github.com/ros-drivers/rgbd_launch.git

